I"ù<!-- Description Guidelines

Please note:
Use the full links to reference other files or images! Relative links will not work under our theme settings settings.
-->

<!-- please choose the appropriate batch and delete/comment the others  -->
<p><img src="https://img.shields.io/badge/Status-Production-brightgreen.svg" alt="prod" /></p>

<h1 id="data-hub"><strong>Data Hub</strong></h1>

<h2 id="introduction">Introduction</h2>
<!-- 2 sentences: what does it do and how -->
<p>The Data Hub is responsible for storing, retrieving and updating oihDataRecords. It functions as the central data storage (synchronized data) within the Open Integration Hub.</p>

<p><a href="http://data-hub.openintegrationhub.com/api-docs" class="btn fs-5 mb-4 mb-md-0">API Reference</a>
<a href="https://github.com/openintegrationhub/openintegrationhub/tree/master/services/data-hub" class="btn fs-5 mb-4 mb-md-0">Implementation</a>
<!--[Service File](){: .btn .fs-5 .mb-4 .mb-md-0 }--></p>

<h2 id="technologies-used">Technologies used</h2>

<p><a href="https://www.mongodb.com/">MongoDB</a>: MongoDB is used as the Data Hubâ€™s storage solution.</p>

<h2 id="how-it-works">How it works</h2>

<h3 id="id-linking">ID Linking</h3>

<p>As described in <a href="https://openintegrationhub.github.io/docs/Service%20Collaboration/updatePropagation.html">update propagation</a> the Data Hub receives events by the SDF Adapter. These events contain meta information including the <code class="language-plaintext highlighter-rouge">applicationUid</code> of the source application and the <code class="language-plaintext highlighter-rouge">recordUid</code> of the incoming payload within the source application.</p>

<p>The Data Hub stores information about each set of applicationUids and recordUids in an array called <code class="language-plaintext highlighter-rouge">refs</code>.
In case of a create operation it creates an oihDataRecord and adds the refs array with one object in it i.e. <code class="language-plaintext highlighter-rouge">applicationUid</code> and <code class="language-plaintext highlighter-rouge">recordUid</code> of the source system.
In case of an update operation it identifies the oihDataRecord by the incoming combination of <code class="language-plaintext highlighter-rouge">applicationUid</code> and <code class="language-plaintext highlighter-rouge">recordUid</code> and updates the content.</p>

<p>In both cases, after the successful creation or update, it emits an event to dispatcher service containing either only the object that was received by sdf adapter (create) or the original object and in addition all existing combinations of <code class="language-plaintext highlighter-rouge">applicationUid</code> and <code class="language-plaintext highlighter-rouge">recordUid</code> (update).</p>

<p>In case of a create operation the target applications adapter sends the <code class="language-plaintext highlighter-rouge">recordUid</code> of newly created data record to the SDF Adapter. The SDF Adapter then passes it to the DataHub, so that Data Hub can create a new reference in the <code class="language-plaintext highlighter-rouge">refs</code> array.</p>

<p>The following code represents the structure of an oihDataRecord:</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"data"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="nl">"domainId"</span><span class="p">:</span><span class="w"> </span><span class="s2">"string"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"schemaUri"</span><span class="p">:</span><span class="w"> </span><span class="s2">"string"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"content"</span><span class="p">:</span><span class="w"> </span><span class="p">{},</span><span class="w">
      </span><span class="nl">"refs"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
          </span><span class="nl">"applicationUid"</span><span class="p">:</span><span class="w"> </span><span class="s2">"string"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"recordUid"</span><span class="p">:</span><span class="w"> </span><span class="s2">"string"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"modificationHistory"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
            </span><span class="p">{</span><span class="w">
              </span><span class="nl">"user"</span><span class="p">:</span><span class="w"> </span><span class="s2">"string"</span><span class="p">,</span><span class="w">
              </span><span class="nl">"operation"</span><span class="p">:</span><span class="w"> </span><span class="s2">"string"</span><span class="p">,</span><span class="w">
              </span><span class="nl">"timestamp"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2019-10-09T11:43:25.270Z"</span><span class="w">
            </span><span class="p">}</span><span class="w">
          </span><span class="p">]</span><span class="w">
        </span><span class="p">}</span><span class="w">
      </span><span class="p">],</span><span class="w">
      </span><span class="nl">"owners"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
          </span><span class="nl">"id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"123"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"user"</span><span class="w">
        </span><span class="p">}</span><span class="w">
      </span><span class="p">],</span><span class="w">
      </span><span class="nl">"id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"string"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"createdAt"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2019-10-09T11:43:25.270Z"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"updatedAt"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2019-10-09T11:43:25.270Z"</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">],</span><span class="w">
  </span><span class="nl">"meta"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"page"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w">
    </span><span class="nl">"perPage"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w">
    </span><span class="nl">"total"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w">
    </span><span class="nl">"totalPages"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h3 id="interaction-with-other-services">Interaction with other Services</h3>

<ul>
  <li>Dispatcher Service: Emits events for dispatcher service in order to enable the hub and spoke archticture (See: <a href="https://openintegrationhub.github.io/docs/Service%20Collaboration/updatePropagation.html">update propagation</a>).</li>
  <li>SDF Adapter: Receives events from SDF Adapter in order to create or update oihDataRecords (See: <a href="https://openintegrationhub.github.io/docs/Service%20Collaboration/updatePropagation.html">update propagation</a>).</li>
</ul>
:ET